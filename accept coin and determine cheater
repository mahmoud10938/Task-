function acceptCoin(coin) {
  const isValid = blindSignatures.verify({
    unblinded: coin.signature,
    N: N,
    E: E,
    message: coin.hash
  });
  
  if (!isValid) {
    throw new Error('Invalid coin signature');
  }

  const [leftHashes, rightHashes] = parseCoin(coin.toString());
  const selectedHashes = [];
  
  for (let i = 0; i < COIN_RIS_LENGTH; i++) {
    const chooseLeft = Math.random() < 0.5;
    if (chooseLeft) {
      selectedHashes.push(leftHashes[i]);
    } else {
      selectedHashes.push(rightHashes[i]);
    }
  }

  return selectedHashes;
}

function determineCheater(guid, ris1, ris2) {
  if (ris1.length !== ris2.length) {
    console.log('Merchant is cheating - RIS length mismatch');
    return;
  }

  let identityRevealed = false;
  
  for (let i = 0; i < ris1.length; i++) {
    if (ris1[i] !== ris2[i]) {
      const leftPart = Buffer.from(ris1[i], 'hex');
      const rightPart = Buffer.from(ris2[i], 'hex');
      
      const decrypted = Buffer.alloc(leftPart.length);
      for (let j = 0; j < decrypted.length; j++) {
        decrypted[j] = leftPart[j] ^ rightPart[j];
      }
      
      const decryptedStr = decrypted.toString();
      if (decryptedStr.startsWith(IDENT_STR)) {
        console.log(`Coin creator cheated! Identity: ${decryptedStr.substring(IDENT_STR.length)}`);
        identityRevealed = true;
        break;
      }
    }
  }

  if (!identityRevealed) {
    console.log('Merchant is cheating - identical RIS strings');
  }
    }
